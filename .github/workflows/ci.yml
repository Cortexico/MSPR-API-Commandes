name: CI/CD Pipeline for FastAPI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: orders
          POSTGRES_PASSWORD: apiOrders
          POSTGRES_DB: orders_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    # Configuration de la base de données PostgreSQL.

    steps:
    - uses: actions/checkout@v2
      # Récupère le code source de la branche actuelle.

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
      # Configure Python 3.9 pour exécuter l'application.

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${GITHUB_WORKSPACE}/app" >> $GITHUB_ENV
      # Ajoute le dossier 'app' au PYTHONPATH pour que les modules soient correctement détectés.

    - name: Cache Python packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
      # Met en cache les dépendances Python.

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      # Installe les dépendances nécessaires pour l'application.

    - name: Run tests
      run: |
        pytest tests/
      # Exécute les tests unitaires et d'intégration.

    - name: Build Docker image
      run: |
        docker build -t myapi .
      # Construit une image Docker pour l'application.

    # - name: Notify on Slack
    #   if: always()
    #   uses: rtCamp/action-slack-notify@v2
    #   env:
    #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    #     SLACK_CHANNEL: 'your-channel'
    #     SLACK_MESSAGE: 'Build ${{ job.status }}: ${{ github.repository }} @ ${{ github.ref }}'
    #   # Envoie une notification Slack à chaque exécution du workflow.
